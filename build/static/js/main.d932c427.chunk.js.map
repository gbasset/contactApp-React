{"version":3,"sources":["Component/interface/Header.js","Context.js","Component/contacts/Contact.js","Component/contacts/List.js","Component/revisions/state.js","Component/contacts/AddContact.js","Component/pages/Apropos.js","Component/pages/Page404.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","to","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Provider","nom","email","tel","dispatch","setState","value","this","props","children","Component","Consumer","Contact","show","handleclick","supprimerContact","style","cursor","onClick","float","color","List","supprime","nouveauContact","map","key","supprimeClick","State","famille","membre1","role","age","membre2","membre3","membre4","console","log","AddContact","onChange","e","target","name","onSubmit","preventDefault","Math","floor","random","history","push","bind","htmlFor","placeholder","Apropos","Page404","App","exact","path","component","PureComponent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d932c427.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <nav className='navbar navbar-dark bg-primary mb-3 py-0'>\r\n                <div className='container'>\r\n                    <a href='/' className='navbar-brand'>  AppContacts </a>\r\n                    <ul className='navbar-nav d-inline-block mr-3'>\r\n                        <li className='nav-item  d-inline-block mr-2'>\r\n                            <Link to=\"/liste\" className='nav-link'>  Accueil </Link>\r\n                        </li>\r\n                        <li className='nav-item  d-inline-block mr-2'>\r\n                            <Link to=\"/ajout\" className='nav-link'>  Ajouter </Link>\r\n                        </li>\r\n                        <li className='nav-item  d-inline-block mr-2'>\r\n                            <Link to=\"/propos\" className='nav-link'>  À propos </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n///// creation d'un context \r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'deleteContact':\r\n            return {\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            };\r\n        case 'addContact':\r\n            return{\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n/// ici on exporte le provider, celui qui vas donner \r\n/// il faut lui passer le state qui pourras ensuite être disponile pour les autres components\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        contacts: [\r\n            {\r\n                id: 1,\r\n                nom: 'Gigi La frite',\r\n                email: 'gigi@gmail.com',\r\n                tel: '055 055 055'\r\n            },\r\n            {\r\n                id: 2,\r\n                nom: 'John Vega',\r\n                email: 'Jvega@gmail.com',\r\n                tel: '055 055 055'\r\n            },\r\n            {\r\n                id: 3,\r\n                nom: 'Ambert',\r\n                email: 'gigi@gmail.com',\r\n                tel: '055 055 055'\r\n            },\r\n            {\r\n                id: 4,\r\n                nom: 'Jinette',\r\n                email: 'gigi@gmail.com',\r\n                tel: '055 055 055'\r\n            }\r\n            ,\r\n            {\r\n                id: 4,\r\n                nom: 'Carolin',\r\n                email: 'carolini@gmail.com',\r\n                tel: '055 055 055'\r\n            }\r\n        ],\r\n\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            /// ici on rend le provider et on lui donne accès à tout le state avec la props value={this state}\r\n            <Context.Provider value={this.state}>\r\n                {/* this props.children permet d'afficher et utiliser les choses à l'intérieur d'un composant comme :\r\n                <Text> \r\n                <p> </p>\r\n                </Text>\r\n                Là on pourras afficher le p grace au props.children                \r\n                */}\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n\r\n}\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../Context'\r\n\r\nexport default class Contact extends Component {\r\n    state = {\r\n        show: false,\r\n    }\r\n\r\n    handleclick = () => {\r\n        this.setState({ show: !this.state.show })\r\n    }\r\n    supprimerContact = (id,dispatch) => {\r\ndispatch({type: 'deleteContact', payload: id})\r\n    }\r\n    render() {\r\n        const { email, tel, nom } = this.props;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    return (\r\n\r\n                        <div className='card card-body mb-3 text-center'>\r\n\r\n                            <h4> {nom}&nbsp;  <i style={{ cursor: 'pointer' }} className='fas fa-sort-down' onClick={this.handleclick}> </i>\r\n                                <i className='fas fa-times' style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={()=> this.supprimerContact(this.props.id, value.dispatch)}></i></h4>\r\n                            {this.state.show ? (<ul className='card card-body mb-3'>\r\n                                <li className='list-group-item'> Email : {email} </li>\r\n                                <li className='list-group-item'> Telephone : {tel} </li>\r\n                            </ul>) : null}\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../Context'\r\nexport default class List extends Component {\r\n\r\n    supprime = (id) => {\r\n        const nouveauContact = this.state.contacts.filter(contact => contact.id !== id)\r\n        this.setState({ contacts: nouveauContact })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    return (\r\n                        <>\r\n                            <h3 className=\"display-3 my-4\">Nos contacts</h3>\r\n                            {value.contacts.map(contact => (\r\n                                <Contact key={contact.id} id={contact.id} nom={contact.nom} email={contact.email} tel={contact.tel} supprimeClick={() => this.supprime(contact.id)} />\r\n                            ))}\r\n\r\n                        </>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n/// la puissance de react est dans le rendu conditionnel , ce qui est permis par la state. \r\n// le mieux est d'avoir le state + en dessous de celui ci les fonction qui pourrons le modifier, et de passer ses fonctions aux autres component via des props ou via un rducer pour les tiliser une fois appelés dans \r\n// on peu passer des propriétés avec des fonctions flechés à des éléments voir cours passer des methodes entre les composants de welc\r\nexport default class State extends Component {\r\n    state = {\r\n\r\n        famille: {\r\n            membre1: {\r\n                nom: 'ginette',\r\n                role: 'maman',\r\n                age: 25,\r\n            },\r\n            membre2: {\r\n                nom: 'jean',\r\n                role: 'papa',\r\n                age: 27,\r\n            },\r\n            membre3: {\r\n                nom: 'Paulinette',\r\n                role: 'fille',\r\n                age: 2,\r\n            },\r\n            membre4: {\r\n                nom: 'Geaorge',\r\n                role: 'fils',\r\n                age: 7,\r\n            },\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\nconsole.log('famille',this.state.famille);\r\n\r\n        return (\r\n            <>\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Consumer } from '../../Context'\r\n\r\nexport default class AddContact extends Component {\r\n    state = {\r\n        nom: ' ',\r\n        email: ' ',\r\n        tel: ' '\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n    onSubmit = (dispatch, e) => {\r\n        e.preventDefault()\r\n        console.log('this.state', this.state)\r\n        const newContact = {\r\n            id: Math.floor(Math.random() * Math.floor(10145454645556)),\r\n            nom: this.state.nom,\r\n            email: this.state.email,\r\n            tel: this.state.tel,\r\n        }\r\n        dispatch({ type: \"addContact\", payload: newContact })\r\n        this.setState(\r\n            {\r\n                nom: ' ',\r\n                email: ' ',\r\n                tel: ' '\r\n            })\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    return (<div className=\"card mb-3\">\r\n                        <div className=\"card-header\"> Ajouter un contact </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"nom\"> Nom </label>\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Votre nom...\"\r\n                                        name=\"nom\"\r\n                                        value={this.state.nom}\r\n                                        onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\"> Email </label>\r\n                                    <input type=\"email\" className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Votre email\"\r\n                                        name=\"email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.onChange}>\r\n\r\n                                    </input>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"tel\"> Tel </label>\r\n                                    <input type=\"tel\" className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Votre telephone\"\r\n                                        name=\"tel\"\r\n                                        value={this.state.tel}\r\n                                        onChange={this.onChange}>\r\n                                    </input>\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Ajouter un contact\" className=\"btn btn-block btn-primary\" />\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>)\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nexport default function Apropos() {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'>Les détails de l'application ...</h1>\r\n            <p className='lead'> V 1.00254665</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Page404() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-3\"> Erreur 404 Page non trouvée!</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { PureComponent } from 'react'\r\nimport Header from './Component/interface/Header'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Provider } from \"./Context\";\r\nimport List from './Component/contacts/List'\r\nimport State from './Component/revisions/state'\r\nimport AddContact from './Component/contacts/AddContact'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Apropos from './Component/pages/Apropos';\r\nimport Page404 from './Component/pages/Page404';\r\nexport default class App extends PureComponent {\r\n\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div>\r\n            <State />\r\n            <Header />\r\n            <div className='container'>\r\n              <Switch>\r\n                <Route exact path='/liste' component={List} />\r\n                <Route exact path='/ajout' component={AddContact} />\r\n                <Route exact path='/propos' component={Apropos} />\r\n                <Route exact path='/' component={List} />\r\n                <Route component={Page404} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}